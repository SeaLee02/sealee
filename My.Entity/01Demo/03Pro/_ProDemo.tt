<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="$(SolutionDir)_file\Sealee.T4Helper.dll" #>
<#@ import namespace="Sealee.T4Helper" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="$(ProjectDir)Framework/T4/Procedure.t4" #>

<# 
     // 配置config
    string solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");
    MyConfig myConfig=StringUtil.GetConfig (solutionsPath+"_file\\T4Helper.json");
    myConfig.IsOverrideFile=true;
    myConfig.TableName="";
    myConfig.NameSpace="My.Entity.Demo.Pro";
    List<DbObj> tables = DbUtil.GetDbObj(myConfig.ConnectionString,"").ToList();
    string curPath = Path.GetDirectoryName(Host.TemplateFile);
    string destPath = Path.Combine(curPath, "");

    foreach(DbObj tableInfo in tables)
    {
        string fileName = string.Format(@"{0}\{1}.cs", destPath, tableInfo.ObjName);
        Procedure template = new Procedure(tableInfo,myConfig);
        template.Output.Encoding = Encoding.UTF8;
        template.Output.PreserveExistingFile =false;
        template.RenderToFile(fileName);
    }
#>