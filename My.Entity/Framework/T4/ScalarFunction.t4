<#+
// <copyright file="ScalarFunction.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class ScalarFunction : CSharpTemplate
{
    private DbObj _obj;
    private MyConfig _config;
    public ScalarFunction(DbObj obj,MyConfig config)
    { 
         _obj=obj;
         _config=config;
    }

	public override string TransformText()
	{
#>
namespace <#=_config.NameSpace #>
{
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using Sealee.SqlHelper;

	/// <summary>
    /// <#=_obj.ObjDesc #>
    /// </summary>
    public class <#=_obj.ObjName #> 
    {
<#+foreach(DbObjColumn column in _obj.DbObjColumns){#>
        
        /// <summary>
        /// <#=column.ObjColumnDesc#>
        /// </summary>
        public <#=column.CShareType#> <#=column.ObjColumnName #> { get; set; } 
<#+} #>

         /// <summary>
        /// 获取单个值
        /// </summary>
        /// <typeparam name="T">值得类型</typeparam>
        /// <returns>单个值</returns>
        public T ExecuteScalar<T>()
        {
            var conStr = "";
            string sql = this.GetSql();
            return DBHelper.ExecuteScalar<T>(conStr, sql, null);
        }

        public string GetSql()
        {
            string sql = "SELECT dbo.<#=_obj.ObjName #>(";
<#+foreach(DbObjColumn column in _obj.DbObjColumns){#>
            sql += $"'{this.<#=column.ObjColumnName #>}',";
<#+} #>
            sql = sql.Substring(0, sql.Length - 1);
            sql+=");";
            return sql;
        }

	}
}
<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
